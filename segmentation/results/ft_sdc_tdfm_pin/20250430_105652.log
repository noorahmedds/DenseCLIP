2025-04-30 10:56:52,762 - mmseg - INFO - Environment info:
------------------------------------------------------------
sys.platform: linux
Python: 3.8.20 (default, Oct  3 2024, 15:24:27) [GCC 11.2.0]
CUDA available: True
GPU 0: NVIDIA RTX A6000
CUDA_HOME: /usr/local/cuda-11.7
NVCC: Build cuda_11.7.r11.7/compiler.31442593_0
GCC: gcc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0
PyTorch: 1.8.0
PyTorch compiling details: PyTorch built with:
  - GCC 7.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2023.1-Product Build 20230303 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v1.7.0 (Git Hash 7aed236906b1f7a05c0917e5257a1af05e9ff683)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.1
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.0.5
  - Magma 2.5.2
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.1, CUDNN_VERSION=8.0.5, CXX_COMPILER=/opt/rh/devtoolset-7/root/usr/bin/c++, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.8.0, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, 

TorchVision: 0.9.0
OpenCV: 4.11.0
MMCV: 1.3.17
MMCV Compiler: GCC 7.3
MMCV CUDA Compiler: 11.1
MMSegmentation: 0.19.0+5eda47f
------------------------------------------------------------

2025-04-30 10:56:52,762 - mmseg - INFO - Distributed training: False
2025-04-30 10:56:52,878 - mmseg - INFO - Config:
dataset_type = 'TDFM_PIN'
data_root = '/home/noah00001/Desktop/dataset/TDFM_PIN'
IMG_MEAN = [122.7709383, 116.7460125, 104.09373615000001]
IMG_VAR = [68.5005327, 66.6321579, 70.32316304999999]
img_norm_cfg = dict(
    mean=[122.7709383, 116.7460125, 104.09373615000001],
    std=[68.5005327, 66.6321579, 70.32316304999999],
    to_rgb=True)
crop_size = (640, 640)
model = dict(
    identity_head=dict(
        type='IdentityHead',
        in_channels=1,
        channels=1,
        num_classes=1,
        dropout_ratio=0.1,
        align_corners=False,
        ignore_index=255,
        loss_decode=dict(
            type='CrossEntropyLoss', use_sigmoid=False, loss_weight=0.4)),
    type='SimpleDenseCLIP',
    context_length=77,
    text_head=False,
    text_dim=512,
    score_concat_index=2,
    backbone=dict(
        type='CLIPVisionTransformer',
        pretrained='pretrained/ViT-B-16.pt',
        patch_size=16,
        width=768,
        output_dim=512,
        get_embeddings=True,
        drop_path_rate=0.1,
        layers=12,
        input_resolution=640,
        dense=False,
        style='pytorch'),
    text_encoder=dict(
        type='CLIPTextEncoder',
        pretrained='pretrained/ViT-B-16.pt',
        context_length=77,
        embed_dim=512,
        transformer_width=512,
        transformer_heads=8,
        transformer_layers=12,
        style='pytorch'),
    train_cfg=dict(),
    test_cfg=dict(mode='whole'))
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(type='LoadAnnotations'),
    dict(type='Resize', img_scale=(2048, 640), ratio_range=(0.5, 2.0)),
    dict(type='RandomCrop', crop_size=(640, 640), cat_max_ratio=0.75),
    dict(type='RandomFlip', prob=0.5),
    dict(type='PhotoMetricDistortion'),
    dict(
        type='Normalize',
        mean=[122.7709383, 116.7460125, 104.09373615000001],
        std=[68.5005327, 66.6321579, 70.32316304999999],
        to_rgb=True),
    dict(type='Pad', size=(640, 640), pad_val=0, seg_pad_val=255),
    dict(type='DefaultFormatBundle'),
    dict(type='Collect', keys=['img', 'gt_semantic_seg'])
]
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(
        type='MultiScaleFlipAug',
        img_scale=(2048, 640),
        flip=False,
        transforms=[
            dict(type='Resize', keep_ratio=True),
            dict(type='RandomFlip'),
            dict(
                type='Normalize',
                mean=[122.7709383, 116.7460125, 104.09373615000001],
                std=[68.5005327, 66.6321579, 70.32316304999999],
                to_rgb=True),
            dict(type='ImageToTensor', keys=['img']),
            dict(type='Collect', keys=['img'])
        ])
]
data = dict(
    samples_per_gpu=4,
    workers_per_gpu=4,
    train=dict(
        type='TDFM_PIN',
        data_root='/home/noah00001/Desktop/dataset/TDFM_PIN',
        img_dir='images/train',
        ann_dir='annotations/train',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(type='LoadAnnotations'),
            dict(type='Resize', img_scale=(2048, 640), ratio_range=(0.5, 2.0)),
            dict(type='RandomCrop', crop_size=(640, 640), cat_max_ratio=0.75),
            dict(type='RandomFlip', prob=0.5),
            dict(type='PhotoMetricDistortion'),
            dict(
                type='Normalize',
                mean=[122.7709383, 116.7460125, 104.09373615000001],
                std=[68.5005327, 66.6321579, 70.32316304999999],
                to_rgb=True),
            dict(type='Pad', size=(640, 640), pad_val=0, seg_pad_val=255),
            dict(type='DefaultFormatBundle'),
            dict(type='Collect', keys=['img', 'gt_semantic_seg'])
        ]),
    val=dict(
        type='TDFM_PIN',
        data_root='/home/noah00001/Desktop/dataset/TDFM_PIN',
        img_dir='images/val',
        ann_dir='annotations/val',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(
                type='MultiScaleFlipAug',
                img_scale=(2048, 640),
                flip=False,
                transforms=[
                    dict(type='Resize', keep_ratio=True),
                    dict(type='RandomFlip'),
                    dict(
                        type='Normalize',
                        mean=[122.7709383, 116.7460125, 104.09373615000001],
                        std=[68.5005327, 66.6321579, 70.32316304999999],
                        to_rgb=True),
                    dict(type='ImageToTensor', keys=['img']),
                    dict(type='Collect', keys=['img'])
                ])
        ]),
    test=dict(
        type='TDFM_PIN',
        data_root='/home/noah00001/Desktop/dataset/TDFM_PIN',
        img_dir='images/val',
        ann_dir='annotations/val',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(
                type='MultiScaleFlipAug',
                img_scale=(2048, 640),
                flip=False,
                transforms=[
                    dict(type='Resize', keep_ratio=True),
                    dict(type='RandomFlip'),
                    dict(
                        type='Normalize',
                        mean=[122.7709383, 116.7460125, 104.09373615000001],
                        std=[68.5005327, 66.6321579, 70.32316304999999],
                        to_rgb=True),
                    dict(type='ImageToTensor', keys=['img']),
                    dict(type='Collect', keys=['img'])
                ])
        ]))
log_config = dict(
    interval=50, hooks=[dict(type='TextLoggerHook', by_epoch=False)])
dist_params = dict(backend='nccl')
log_level = 'INFO'
load_from = None
resume_from = None
workflow = [('train', 100), ('val', 2)]
cudnn_benchmark = True
find_unused_parameters = True
optimizer = dict(
    type='AdamW',
    lr=0.0001,
    weight_decay=0.0001,
    paramwise_cfg=dict(
        custom_keys=dict(
            backbone=dict(lr_mult=0.1),
            text_encoder=dict(lr_mult=0.0),
            norm=dict(decay_mult=0.0))))
optimizer_config = dict()
lr_config = dict(
    policy='poly',
    power=0.9,
    min_lr=1e-06,
    by_epoch=False,
    warmup='linear',
    warmup_iters=1500,
    warmup_ratio=1e-06)
runner = dict(type='IterBasedRunner', max_iters=20000)
checkpoint_config = dict(by_epoch=False, interval=2000)
evaluation = dict(interval=2000, metric='mIoU')
norm_cfg = dict(type='SyncBN', requires_grad=True)
work_dir = './results/ft_sdc_tdfm_pin'
gpu_ids = range(0, 1)

2025-04-30 10:56:52,878 - mmseg - INFO - Set random seed to 11, deterministic: False
2025-04-30 10:56:53,071 - mmseg - INFO - Loaded 20466 images
2025-04-30 10:56:54,414 - mmseg - INFO - #Params: 150699008
2025-04-30 10:56:55,040 - mmseg - INFO - SimpleDenseCLIP(
  (backbone): CLIPVisionTransformer(
    (conv1): Conv2d(3, 768, kernel_size=(16, 16), stride=(16, 16), bias=False)
    (ln_pre): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
    (transformer): Transformer(
      (resblocks): Sequential(
        (0): ResidualAttentionBlock(
          (attn): MultiheadAttention(
            (out_proj): _LinearWithBias(in_features=768, out_features=768, bias=True)
          )
          (ln_1): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
          (mlp): Sequential(
            (c_fc): Linear(in_features=768, out_features=3072, bias=True)
            (gelu): QuickGELU()
            (c_proj): Linear(in_features=3072, out_features=768, bias=True)
          )
          (ln_2): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
          (drop_path): Identity()
        )
        (1): ResidualAttentionBlock(
          (attn): MultiheadAttention(
            (out_proj): _LinearWithBias(in_features=768, out_features=768, bias=True)
          )
          (ln_1): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
          (mlp): Sequential(
            (c_fc): Linear(in_features=768, out_features=3072, bias=True)
            (gelu): QuickGELU()
            (c_proj): Linear(in_features=3072, out_features=768, bias=True)
          )
          (ln_2): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
          (drop_path): DropPath(p=0.00909090880304575)
        )
        (2): ResidualAttentionBlock(
          (attn): MultiheadAttention(
            (out_proj): _LinearWithBias(in_features=768, out_features=768, bias=True)
          )
          (ln_1): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
          (mlp): Sequential(
            (c_fc): Linear(in_features=768, out_features=3072, bias=True)
            (gelu): QuickGELU()
            (c_proj): Linear(in_features=3072, out_features=768, bias=True)
          )
          (ln_2): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
          (drop_path): DropPath(p=0.0181818176060915)
        )
        (3): ResidualAttentionBlock(
          (attn): MultiheadAttention(
            (out_proj): _LinearWithBias(in_features=768, out_features=768, bias=True)
          )
          (ln_1): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
          (mlp): Sequential(
            (c_fc): Linear(in_features=768, out_features=3072, bias=True)
            (gelu): QuickGELU()
            (c_proj): Linear(in_features=3072, out_features=768, bias=True)
          )
          (ln_2): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
          (drop_path): DropPath(p=0.027272727340459824)
        )
        (4): ResidualAttentionBlock(
          (attn): MultiheadAttention(
            (out_proj): _LinearWithBias(in_features=768, out_features=768, bias=True)
          )
          (ln_1): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
          (mlp): Sequential(
            (c_fc): Linear(in_features=768, out_features=3072, bias=True)
            (gelu): QuickGELU()
            (c_proj): Linear(in_features=3072, out_features=768, bias=True)
          )
          (ln_2): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
          (drop_path): DropPath(p=0.036363635212183)
        )
        (5): ResidualAttentionBlock(
          (attn): MultiheadAttention(
            (out_proj): _LinearWithBias(in_features=768, out_features=768, bias=True)
          )
          (ln_1): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
          (mlp): Sequential(
            (c_fc): Linear(in_features=768, out_features=3072, bias=True)
            (gelu): QuickGELU()
            (c_proj): Linear(in_features=3072, out_features=768, bias=True)
          )
          (ln_2): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
          (drop_path): DropPath(p=0.045454543083906174)
        )
        (6): ResidualAttentionBlock(
          (attn): MultiheadAttention(
            (out_proj): _LinearWithBias(in_features=768, out_features=768, bias=True)
          )
          (ln_1): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
          (mlp): Sequential(
            (c_fc): Linear(in_features=768, out_features=3072, bias=True)
            (gelu): QuickGELU()
            (c_proj): Linear(in_features=3072, out_features=768, bias=True)
          )
          (ln_2): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
          (drop_path): DropPath(p=0.054545458406209946)
        )
        (7): ResidualAttentionBlock(
          (attn): MultiheadAttention(
            (out_proj): _LinearWithBias(in_features=768, out_features=768, bias=True)
          )
          (ln_1): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
          (mlp): Sequential(
            (c_fc): Linear(in_features=768, out_features=3072, bias=True)
            (gelu): QuickGELU()
            (c_proj): Linear(in_features=3072, out_features=768, bias=True)
          )
          (ln_2): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
          (drop_path): DropPath(p=0.06363636255264282)
        )
        (8): ResidualAttentionBlock(
          (attn): MultiheadAttention(
            (out_proj): _LinearWithBias(in_features=768, out_features=768, bias=True)
          )
          (ln_1): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
          (mlp): Sequential(
            (c_fc): Linear(in_features=768, out_features=3072, bias=True)
            (gelu): QuickGELU()
            (c_proj): Linear(in_features=3072, out_features=768, bias=True)
          )
          (ln_2): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
          (drop_path): DropPath(p=0.0727272778749466)
        )
        (9): ResidualAttentionBlock(
          (attn): MultiheadAttention(
            (out_proj): _LinearWithBias(in_features=768, out_features=768, bias=True)
          )
          (ln_1): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
          (mlp): Sequential(
            (c_fc): Linear(in_features=768, out_features=3072, bias=True)
            (gelu): QuickGELU()
            (c_proj): Linear(in_features=3072, out_features=768, bias=True)
          )
          (ln_2): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
          (drop_path): DropPath(p=0.08181818574666977)
        )
        (10): ResidualAttentionBlock(
          (attn): MultiheadAttention(
            (out_proj): _LinearWithBias(in_features=768, out_features=768, bias=True)
          )
          (ln_1): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
          (mlp): Sequential(
            (c_fc): Linear(in_features=768, out_features=3072, bias=True)
            (gelu): QuickGELU()
            (c_proj): Linear(in_features=3072, out_features=768, bias=True)
          )
          (ln_2): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
          (drop_path): DropPath(p=0.09090909361839294)
        )
        (11): ResidualAttentionBlock(
          (attn): MultiheadAttention(
            (out_proj): _LinearWithBias(in_features=768, out_features=768, bias=True)
          )
          (ln_1): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
          (mlp): Sequential(
            (c_fc): Linear(in_features=768, out_features=3072, bias=True)
            (gelu): QuickGELU()
            (c_proj): Linear(in_features=3072, out_features=768, bias=True)
          )
          (ln_2): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
          (drop_path): DropPath(p=0.10000000149011612)
        )
      )
    )
    (ln_post): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
  )
  (text_encoder): CLIPTextEncoder(
    (transformer): Transformer(
      (resblocks): Sequential(
        (0): ResidualAttentionBlock(
          (attn): MultiheadAttention(
            (out_proj): _LinearWithBias(in_features=512, out_features=512, bias=True)
          )
          (ln_1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
          (mlp): Sequential(
            (c_fc): Linear(in_features=512, out_features=2048, bias=True)
            (gelu): QuickGELU()
            (c_proj): Linear(in_features=2048, out_features=512, bias=True)
          )
          (ln_2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
          (drop_path): Identity()
        )
        (1): ResidualAttentionBlock(
          (attn): MultiheadAttention(
            (out_proj): _LinearWithBias(in_features=512, out_features=512, bias=True)
          )
          (ln_1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
          (mlp): Sequential(
            (c_fc): Linear(in_features=512, out_features=2048, bias=True)
            (gelu): QuickGELU()
            (c_proj): Linear(in_features=2048, out_features=512, bias=True)
          )
          (ln_2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
          (drop_path): Identity()
        )
        (2): ResidualAttentionBlock(
          (attn): MultiheadAttention(
            (out_proj): _LinearWithBias(in_features=512, out_features=512, bias=True)
          )
          (ln_1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
          (mlp): Sequential(
            (c_fc): Linear(in_features=512, out_features=2048, bias=True)
            (gelu): QuickGELU()
            (c_proj): Linear(in_features=2048, out_features=512, bias=True)
          )
          (ln_2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
          (drop_path): Identity()
        )
        (3): ResidualAttentionBlock(
          (attn): MultiheadAttention(
            (out_proj): _LinearWithBias(in_features=512, out_features=512, bias=True)
          )
          (ln_1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
          (mlp): Sequential(
            (c_fc): Linear(in_features=512, out_features=2048, bias=True)
            (gelu): QuickGELU()
            (c_proj): Linear(in_features=2048, out_features=512, bias=True)
          )
          (ln_2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
          (drop_path): Identity()
        )
        (4): ResidualAttentionBlock(
          (attn): MultiheadAttention(
            (out_proj): _LinearWithBias(in_features=512, out_features=512, bias=True)
          )
          (ln_1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
          (mlp): Sequential(
            (c_fc): Linear(in_features=512, out_features=2048, bias=True)
            (gelu): QuickGELU()
            (c_proj): Linear(in_features=2048, out_features=512, bias=True)
          )
          (ln_2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
          (drop_path): Identity()
        )
        (5): ResidualAttentionBlock(
          (attn): MultiheadAttention(
            (out_proj): _LinearWithBias(in_features=512, out_features=512, bias=True)
          )
          (ln_1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
          (mlp): Sequential(
            (c_fc): Linear(in_features=512, out_features=2048, bias=True)
            (gelu): QuickGELU()
            (c_proj): Linear(in_features=2048, out_features=512, bias=True)
          )
          (ln_2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
          (drop_path): Identity()
        )
        (6): ResidualAttentionBlock(
          (attn): MultiheadAttention(
            (out_proj): _LinearWithBias(in_features=512, out_features=512, bias=True)
          )
          (ln_1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
          (mlp): Sequential(
            (c_fc): Linear(in_features=512, out_features=2048, bias=True)
            (gelu): QuickGELU()
            (c_proj): Linear(in_features=2048, out_features=512, bias=True)
          )
          (ln_2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
          (drop_path): Identity()
        )
        (7): ResidualAttentionBlock(
          (attn): MultiheadAttention(
            (out_proj): _LinearWithBias(in_features=512, out_features=512, bias=True)
          )
          (ln_1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
          (mlp): Sequential(
            (c_fc): Linear(in_features=512, out_features=2048, bias=True)
            (gelu): QuickGELU()
            (c_proj): Linear(in_features=2048, out_features=512, bias=True)
          )
          (ln_2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
          (drop_path): Identity()
        )
        (8): ResidualAttentionBlock(
          (attn): MultiheadAttention(
            (out_proj): _LinearWithBias(in_features=512, out_features=512, bias=True)
          )
          (ln_1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
          (mlp): Sequential(
            (c_fc): Linear(in_features=512, out_features=2048, bias=True)
            (gelu): QuickGELU()
            (c_proj): Linear(in_features=2048, out_features=512, bias=True)
          )
          (ln_2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
          (drop_path): Identity()
        )
        (9): ResidualAttentionBlock(
          (attn): MultiheadAttention(
            (out_proj): _LinearWithBias(in_features=512, out_features=512, bias=True)
          )
          (ln_1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
          (mlp): Sequential(
            (c_fc): Linear(in_features=512, out_features=2048, bias=True)
            (gelu): QuickGELU()
            (c_proj): Linear(in_features=2048, out_features=512, bias=True)
          )
          (ln_2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
          (drop_path): Identity()
        )
        (10): ResidualAttentionBlock(
          (attn): MultiheadAttention(
            (out_proj): _LinearWithBias(in_features=512, out_features=512, bias=True)
          )
          (ln_1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
          (mlp): Sequential(
            (c_fc): Linear(in_features=512, out_features=2048, bias=True)
            (gelu): QuickGELU()
            (c_proj): Linear(in_features=2048, out_features=512, bias=True)
          )
          (ln_2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
          (drop_path): Identity()
        )
        (11): ResidualAttentionBlock(
          (attn): MultiheadAttention(
            (out_proj): _LinearWithBias(in_features=512, out_features=512, bias=True)
          )
          (ln_1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
          (mlp): Sequential(
            (c_fc): Linear(in_features=512, out_features=2048, bias=True)
            (gelu): QuickGELU()
            (c_proj): Linear(in_features=2048, out_features=512, bias=True)
          )
          (ln_2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
          (drop_path): Identity()
        )
      )
    )
    (token_embedding): Embedding(49408, 512)
    (ln_final): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
  )
  (identity_head): IdentityHead(
    input_transform=None, ignore_index=255, align_corners=False
    (loss_decode): CrossEntropyLoss()
    (conv_seg): None
    (dropout): Dropout2d(p=0.1, inplace=False)
  )
  init_cfg={'type': 'Normal', 'std': 0.01, 'override': {'name': 'conv_seg'}}
)
2025-04-30 10:56:55,182 - mmseg - INFO - Loaded 20466 images
2025-04-30 10:56:57,398 - mmseg - INFO - Loaded 20466 images
2025-04-30 10:56:57,398 - mmseg - INFO - Start running, host: noah00001@buzz, work_dir: /home/noah00001/Desktop/projects/throwaway/DenseCLIP/segmentation/results/ft_sdc_tdfm_pin
2025-04-30 10:56:57,398 - mmseg - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) PolyLrUpdaterHook                  
(NORMAL      ) CheckpointHook                     
(LOW         ) EvalHook                           
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) PolyLrUpdaterHook                  
(LOW         ) IterTimerHook                      
(LOW         ) EvalHook                           
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
before_train_iter:
(VERY_HIGH   ) PolyLrUpdaterHook                  
(LOW         ) IterTimerHook                      
(LOW         ) EvalHook                           
 -------------------- 
after_train_iter:
(ABOVE_NORMAL) OptimizerHook                      
(NORMAL      ) CheckpointHook                     
(LOW         ) IterTimerHook                      
(LOW         ) EvalHook                           
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) CheckpointHook                     
(LOW         ) EvalHook                           
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
before_val_epoch:
(LOW         ) IterTimerHook                      
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
before_val_iter:
(LOW         ) IterTimerHook                      
 -------------------- 
after_val_iter:
(LOW         ) IterTimerHook                      
 -------------------- 
after_val_epoch:
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
after_run:
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
2025-04-30 10:56:57,398 - mmseg - INFO - workflow: [('train', 100), ('val', 2)], max: 20000 iters
2025-04-30 10:56:57,398 - mmseg - INFO - Checkpoints will be saved to /home/noah00001/Desktop/projects/throwaway/DenseCLIP/segmentation/results/ft_sdc_tdfm_pin by HardDiskBackend.
2025-04-30 10:57:30,042 - mmseg - INFO - Iter [50/20000]	lr: 3.260e-07, eta: 3:35:13, time: 0.647, data_time: 0.008, memory: 22655, aux_identity.loss_ce: 0.2056, aux_identity.acc_seg: 0.7746, loss: 0.2056
2025-04-30 10:58:00,467 - mmseg - INFO - Iter [100/20000]	lr: 6.574e-07, eta: 3:28:15, time: 0.608, data_time: 0.006, memory: 22655, aux_identity.loss_ce: 0.2082, aux_identity.acc_seg: 3.2643, loss: 0.2082
2025-04-30 10:58:31,408 - mmseg - INFO - Iter [150/20000]	lr: 9.873e-07, eta: 3:26:03, time: 0.613, data_time: 0.006, memory: 22655, aux_identity.loss_ce: 0.1935, aux_identity.acc_seg: 5.7213, loss: 0.1935, aux_identity.loss_ce_val: 0.2968, aux_identity.acc_seg_val: 12.5305, loss_val: 0.2968
2025-04-30 10:59:02,147 - mmseg - INFO - Iter [200/20000]	lr: 1.316e-06, eta: 3:24:52, time: 0.615, data_time: 0.006, memory: 22655, aux_identity.loss_ce: 0.1589, aux_identity.acc_seg: 5.6154, loss: 0.1589, aux_identity.loss_ce_val: 0.2968, aux_identity.acc_seg_val: 12.5305, loss_val: 0.2968
2025-04-30 10:59:33,074 - mmseg - INFO - Iter [250/20000]	lr: 1.643e-06, eta: 3:23:47, time: 0.612, data_time: 0.006, memory: 22655, aux_identity.loss_ce: 0.1384, aux_identity.acc_seg: 5.9896, loss: 0.1384, aux_identity.loss_ce_val: 0.2372, aux_identity.acc_seg_val: 10.6678, loss_val: 0.2372
2025-04-30 11:00:03,790 - mmseg - INFO - Iter [300/20000]	lr: 1.969e-06, eta: 3:23:00, time: 0.614, data_time: 0.006, memory: 22655, aux_identity.loss_ce: 0.1180, aux_identity.acc_seg: 6.8363, loss: 0.1180, aux_identity.loss_ce_val: 0.2372, aux_identity.acc_seg_val: 10.6678, loss_val: 0.2372
2025-04-30 11:00:34,855 - mmseg - INFO - Iter [350/20000]	lr: 2.294e-06, eta: 3:22:21, time: 0.615, data_time: 0.006, memory: 22655, aux_identity.loss_ce: 0.1079, aux_identity.acc_seg: 6.7241, loss: 0.1079, aux_identity.loss_ce_val: 0.2001, aux_identity.acc_seg_val: 9.1401, loss_val: 0.2001
2025-04-30 11:01:05,503 - mmseg - INFO - Iter [400/20000]	lr: 2.617e-06, eta: 3:21:38, time: 0.613, data_time: 0.006, memory: 22655, aux_identity.loss_ce: 0.0999, aux_identity.acc_seg: 6.5817, loss: 0.0999, aux_identity.loss_ce_val: 0.2001, aux_identity.acc_seg_val: 9.1401, loss_val: 0.2001
2025-04-30 11:01:36,466 - mmseg - INFO - Iter [450/20000]	lr: 2.939e-06, eta: 3:20:58, time: 0.613, data_time: 0.006, memory: 22655, aux_identity.loss_ce: 0.0973, aux_identity.acc_seg: 7.5696, loss: 0.0973, aux_identity.loss_ce_val: 0.1771, aux_identity.acc_seg_val: 8.8845, loss_val: 0.1771
2025-04-30 11:02:07,169 - mmseg - INFO - Iter [500/20000]	lr: 3.259e-06, eta: 3:20:22, time: 0.614, data_time: 0.006, memory: 22655, aux_identity.loss_ce: 0.0842, aux_identity.acc_seg: 6.8593, loss: 0.0842, aux_identity.loss_ce_val: 0.1771, aux_identity.acc_seg_val: 8.8845, loss_val: 0.1771
2025-04-30 11:02:38,026 - mmseg - INFO - Iter [550/20000]	lr: 3.579e-06, eta: 3:19:41, time: 0.611, data_time: 0.006, memory: 22655, aux_identity.loss_ce: 0.0842, aux_identity.acc_seg: 8.3515, loss: 0.0842, aux_identity.loss_ce_val: 0.1564, aux_identity.acc_seg_val: 8.9426, loss_val: 0.1564
2025-04-30 11:03:08,637 - mmseg - INFO - Iter [600/20000]	lr: 3.896e-06, eta: 3:19:04, time: 0.612, data_time: 0.006, memory: 22655, aux_identity.loss_ce: 0.0791, aux_identity.acc_seg: 7.7983, loss: 0.0791, aux_identity.loss_ce_val: 0.1564, aux_identity.acc_seg_val: 8.9426, loss_val: 0.1564
2025-04-30 11:03:39,583 - mmseg - INFO - Iter [650/20000]	lr: 4.213e-06, eta: 3:18:29, time: 0.613, data_time: 0.006, memory: 22655, aux_identity.loss_ce: 0.0704, aux_identity.acc_seg: 8.7995, loss: 0.0704, aux_identity.loss_ce_val: 0.1431, aux_identity.acc_seg_val: 8.7972, loss_val: 0.1431
2025-04-30 11:04:10,210 - mmseg - INFO - Iter [700/20000]	lr: 4.528e-06, eta: 3:17:54, time: 0.613, data_time: 0.006, memory: 22655, aux_identity.loss_ce: 0.0991, aux_identity.acc_seg: 6.7396, loss: 0.0991, aux_identity.loss_ce_val: 0.1431, aux_identity.acc_seg_val: 8.7972, loss_val: 0.1431
2025-04-30 11:04:41,151 - mmseg - INFO - Iter [750/20000]	lr: 4.842e-06, eta: 3:17:20, time: 0.613, data_time: 0.006, memory: 22655, aux_identity.loss_ce: 0.0877, aux_identity.acc_seg: 9.3431, loss: 0.0877, aux_identity.loss_ce_val: 0.1443, aux_identity.acc_seg_val: 8.0344, loss_val: 0.1443
2025-04-30 11:05:11,719 - mmseg - INFO - Iter [800/20000]	lr: 5.154e-06, eta: 3:16:45, time: 0.611, data_time: 0.006, memory: 22655, aux_identity.loss_ce: 0.0677, aux_identity.acc_seg: 7.0883, loss: 0.0677, aux_identity.loss_ce_val: 0.1443, aux_identity.acc_seg_val: 8.0344, loss_val: 0.1443
2025-04-30 11:05:42,610 - mmseg - INFO - Iter [850/20000]	lr: 5.465e-06, eta: 3:16:10, time: 0.612, data_time: 0.006, memory: 22655, aux_identity.loss_ce: 0.0801, aux_identity.acc_seg: 9.2827, loss: 0.0801, aux_identity.loss_ce_val: 0.1311, aux_identity.acc_seg_val: 7.7405, loss_val: 0.1311
2025-04-30 11:06:13,163 - mmseg - INFO - Iter [900/20000]	lr: 5.775e-06, eta: 3:15:36, time: 0.611, data_time: 0.006, memory: 22655, aux_identity.loss_ce: 0.0685, aux_identity.acc_seg: 9.7152, loss: 0.0685, aux_identity.loss_ce_val: 0.1311, aux_identity.acc_seg_val: 7.7405, loss_val: 0.1311
2025-04-30 11:06:44,093 - mmseg - INFO - Iter [950/20000]	lr: 6.083e-06, eta: 3:15:03, time: 0.612, data_time: 0.006, memory: 22655, aux_identity.loss_ce: 0.0644, aux_identity.acc_seg: 8.9179, loss: 0.0644, aux_identity.loss_ce_val: 0.1255, aux_identity.acc_seg_val: 7.6888, loss_val: 0.1255
2025-04-30 11:07:14,742 - mmseg - INFO - Exp name: simpledenseclip.py
2025-04-30 11:07:14,742 - mmseg - INFO - Iter [1000/20000]	lr: 6.390e-06, eta: 3:14:31, time: 0.613, data_time: 0.006, memory: 22655, aux_identity.loss_ce: 0.0560, aux_identity.acc_seg: 9.1498, loss: 0.0560, aux_identity.loss_ce_val: 0.1255, aux_identity.acc_seg_val: 7.6888, loss_val: 0.1255
2025-04-30 11:07:45,610 - mmseg - INFO - Iter [1050/20000]	lr: 6.695e-06, eta: 3:13:58, time: 0.611, data_time: 0.006, memory: 22655, aux_identity.loss_ce: 0.0566, aux_identity.acc_seg: 9.1380, loss: 0.0566, aux_identity.loss_ce_val: 0.1176, aux_identity.acc_seg_val: 7.5421, loss_val: 0.1176
2025-04-30 11:08:16,414 - mmseg - INFO - Iter [1100/20000]	lr: 7.000e-06, eta: 3:13:28, time: 0.616, data_time: 0.006, memory: 22655, aux_identity.loss_ce: 0.0574, aux_identity.acc_seg: 8.1855, loss: 0.0574, aux_identity.loss_ce_val: 0.1176, aux_identity.acc_seg_val: 7.5421, loss_val: 0.1176
